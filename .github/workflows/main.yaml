name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_backend:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up JDK (Java Development Kit)
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '11'  # Use Java 11 as specified in your Dockerfile
          distribution: 'temurin'

      # Step 3: Install Maven dependencies and build the backend
      - name: Build Backend with Maven
        run: |
          cd zoy-admin-server
          mvn clean install -DskipTests=true -Pqa

      # Step 4: Upload the generated JAR file as an artifact
      - name: Upload JAR file as artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: zoy-admin-server/target/zoy-admin-server.jar  # Only upload the .jar file

  deploy_backend:
    runs-on: ubuntu-latest
    needs: build_backend

    steps:
      # Step 1: Download the JAR file from the previous job
      - name: Download JAR file artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: ./backend-jar

      # Step 2: Set up SSH keys for secure deployment
      - name: Set up SSH keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      # Step 3: Add server's SSH host key to known_hosts
      - name: Add server SSH host key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H 45.129.86.68 >> ~/.ssh/known_hosts

      # Step 4: Copy the JAR file to the server
      - name: Copy JAR file to server
        run: |
          echo "Copying JAR file to server..."
          scp -o StrictHostKeyChecking=no ./backend-jar/zoy-admin-server.jar ubuntu@45.129.86.68:/tmp/backend/zoy-admin-server.jar

      # Step 5: Build and Run Docker Container on Server
      - name: Build and Run Docker Container on Server
        run: |
          ssh ubuntu@45.129.86.68 << 'EOF'
          # Navigate to the directory containing the Dockerfile
          cd /tmp/backend

          # Stop and remove any existing container (if running)
          docker stop zoy-admin-container || true
          docker rm zoy-admin-container || true

          # Build the Docker image using the Dockerfile (assuming it's already on the server)
          docker build -t zoy-admin-app .

          # Run the new container
          docker run -d --name zoy-admin-container -p 8082:8082 -p 2002:2002 zoy-admin-app
          EOF